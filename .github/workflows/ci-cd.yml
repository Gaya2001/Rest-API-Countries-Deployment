name: CI/CD Pipeline for REST-API-Countries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main  

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the repository code
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx (for multi-platform support)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Log in to Docker Hub
    - name: Log into Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build and Push Frontend Docker Image
    - name: Build and Push Frontend Docker Images
      working-directory: ./Front-End
      run: |
        docker build \
          --build-arg VITE_API_URL=${{ secrets.VITE_API_URL }} \
          --build-arg VITE_SERVER_URL=${{ secrets.VITE_SERVER_URL }} \
          -t gaya2001/mern-frontend:latest .
        docker push gaya2001/mern-frontend:latest

    # Step 5: Build and Push Backend Docker Image
    - name: Build and Push Backend Docker Image
      working-directory: ./Back-End
      run: |
        docker build \
          --build-arg MONGO_URI=${{ secrets.MONGO_URI }} \
          --build-arg PORT=${{ secrets.PORT }} \
          --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
          --build-arg NODE_ENV=${{ secrets.NODE_ENV }} \
          -t gaya2001/mern-backend:latest .
        docker push gaya2001/mern-backend:latest

    # Step 6: Deploy to DigitalOcean Droplet
    - name: Deploy to DigitalOcean Droplet
      env:
        SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
        SSH_HOST: ${{ secrets.DO_SSH_HOST }}
        SSH_USERNAME: ${{ secrets.DO_SSH_USERNAME }}
      run: |
        # Set up SSH key
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Add DigitalOcean's SSH fingerprint to known hosts (to avoid "Are you sure you want to continue" prompt)
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

        # SSH into Droplet and pull latest Docker images
        ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST << 'EOF'
          # Pull the latest images from Docker Hub
          docker pull gaya2001/mern-frontend:latest
          docker pull gaya2001/mern-backend:latest

          # Stop and remove existing containers (if any)
          docker stop frontend-container backend-container || true
          docker rm frontend-container backend-container || true

          # Run the new containers with the updated images
          docker run -d --name frontend-container -p 5173:5173 gaya2001/mern-frontend:latest
          docker run -d --name backend-container -p 6001:6001 gaya2001/mern-backend:latest
        EOF
